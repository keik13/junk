package module3;

import java.util.function.DoubleUnaryOperator;

/**
 * Реализуйте метод, выполняющий численное интегрирование заданной функции на заданном интервале по формуле левых прямоугольников.
 * <p>
 * Функция задана объектом, реализующим интерфейс java.util.function.DoubleUnaryOperator. Его метод applyAsDouble() принимает
 * значение аргумента и возвращает значение функции в заданной точке.
 * <p>
 * Интервал интегрирования задается его конечными точками aa и bb, причем a<=ba<=b. Для получения достаточно точного результата используйте шаг сетки не больше 10−610−6.
 * <p>
 * Пример. Вызов
 * <p>
 * integrate(x -> 1, 0, 10)
 * должен возвращать значение 10.
 * <p>
 * P.S. Если задача слишком легкая, то дополнительно можете реализовать динамический выбор шага сетки по следующему алгоритму:
 * <p>
 * Вычислить приближенное значение интеграла функции при начальном значении шага сетки (например, 1).
 * Вычислить приближенное значение интеграла функции при более мелком шаге сетки (например, уменьшить шаг сетки в два раза).
 * Если разность двух последовательных приближений интеграла функции достаточно мала, то завершаем алгоритм и возвращаем текущее приближение в качестве результата.
 * Иначе возвращаемся к шагу 2.
 * <p>
 * Created by Andrey on 26.09.2016.
 */
public class Step3_5_7 {
    public static double integrate(DoubleUnaryOperator f, double a, double b) {
        double result = 0;
        for (int i = 0; i < (b - a) / 1.0e-6; i++) {
            result += f.applyAsDouble(a + 1.0e-6 * i);
        }
        return result * 1.0e-6;
    }
}
